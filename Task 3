#include <iostream>
using namespace std;

void initializeBoard(char board[3][3]) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            board[i][j] = ' ';
        }
    }
}

void displayBoard(char board[3][3]) {
    cout << "  0 1 2\n";
    for (int i = 0; i < 3; ++i) {
        cout << i << " ";
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}


bool makeMove(char board[3][3], char player, int row, int col) {
    if (board[row][col] == ' ') {
        board[row][col] = player;
        return true;
    }
    return false;
}


void gameBoard(char board[3][3]);
bool checkWin(char board[3][3], char player) {
    // Check rows, columns, and diagonals
    for (int i = 0; i < 3; ++i) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }

    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }

    return false;
}

bool checkDraw(char board[3][3]) {
    // Check if the board is full
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            if (board[i][j] == ' ') {
                return false;
            }
        }
    }
    return true;
}

bool isValidMove(char board[3][3], int row, int col) {
    // Check if the move is within the bounds of the board and the selected cell is empty
    return (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ');
}

char switchPlayer(char currentPlayer) {
    return (currentPlayer == 'X') ? 'O' : 'X';
}

bool playAgain() {
    char response;
    cout << "Do you want to play again? (y/n): ";
    cin >> response;
    return (response == 'y' || response == 'Y');
}


int main() {
    char board[3][3];
    char currentPlayer = 'X';
    bool gameIsOver = false;

    initializeBoard(board);

    do {
        displayBoard(board);

        int row, col;
        do {
            cout << "Player " << currentPlayer << ", enter your move (row and column): ";
            cin >> row >> col;
        } while (!isValidMove(board, row, col));

        if (!makeMove(board, currentPlayer, row, col)) {
            cout << "Invalid move. Try again.\n";
            continue;
        }

        gameIsOver = checkWin(board, currentPlayer) || checkDraw(board);
        currentPlayer = switchPlayer(currentPlayer);

    } while (!gameIsOver);

    displayBoard(board);

    if (checkWin(board, 'X')) {
        cout << "Player X wins!\n";
    } else if (checkWin(board, 'O')) {
        cout << "Player O wins!\n";
    } else {
        cout << "It's a draw!\n";
    }

    if (playAgain()) {
        main();  // Restart the game
    }

    return 0;
}
